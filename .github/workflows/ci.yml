name: Laravel CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
          MYSQL_DATABASE: eventmarrakech
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, pdo_mysql
        coverage: none

    - name: Install dependencies
      run: composer install --no-progress --prefer-dist

    - name: Configure environment
      run: |
        if [ -f .env.example ]; then
          cp .env.example .env
        else
          echo "APP_NAME=Laravel" > .env
          echo "APP_ENV=local" >> .env
          echo "APP_URL=http://localhost" >> .env
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=mysql" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=eventmarrakech" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=" >> .env
        fi

    - name: Wait for MySQL to be ready
      run: |
        for i in {1..30}; do
          if mysqladmin ping --host=mysql --silent; then
            echo "MySQL is ready!"
            break
          fi
          echo "Waiting for MySQL to be ready (attempt $i)..."
          sleep 10
        done
        if ! mysqladmin ping --host=mysql --silent; then
          echo "MySQL did not become ready in time."
          exit 1
        fi

    - name: Test MySQL connection
      run: |
        mysqladmin ping --host=mysql --silent

    - name: Create database
      run: |
        mysql --host=mysql --user=root --execute="CREATE DATABASE IF NOT EXISTS eventmarrakech;"

    - name: Generate application key
      run: php artisan key:generate

    - name: Run migrations
      run: php artisan migrate:fresh --force

    - name: Execute tests
      run: php artisan test